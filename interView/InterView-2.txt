

一般集中在他的简历，我会延展到一些技术问题和产品问题
多线程实现方式
内存管理
动画技术
绘图技术
Cocoa的一些设计模式
Objective-C的一些语言特性

Model层：
数据持久化存储方案有哪些？
沙盒的目录结构是怎样的？各自一般用于什么场合？
SQL语句问题：inner join、left join、right join的区别是什么？
sqlite的优化
网络通信用过哪些方式（100%的人说了AFNetworking...）
如何处理多个网络请求并发的情况
在网络请求中如何提高性能
在网络请求中如何保证安全性 

语言与基础知识：
内存中的栈和堆的区别是什么？那些数据在栈上，哪些在堆上？
#define和const定义的变量，有什么区别
什么情况下会出现内存的循环引用
block中的weak self，是任何时候都需要加的么？
GCD的queue，main queue中执行的代码，一定是在main thread么？
NSOperationQueue有哪些使用方式
NSThread中的Runloop的作用，如何使用？
.h文件中的变量，外部可以直接访问么？（注意是变量，不是property）
讲述一下runtime的概念，message send如果寻找不到相应的对象，会如何进行后续处理 ？
TCP和UDP的区别是什么？
MD5和Base64的区别是什么，各自场景是什么？
二叉搜索树的概念，时间复杂度多少？

架构：（我们招的不是架构师，这方面问的不多，而且从之前对APP的架构介绍里可以边听边问）
哪些类不适合使用单例模式？即使他们在周期中只会出现一次。
Notification的使用场景是什么？同步还是异步？
简单介绍一下KVC和KVO，他们都可以应用在哪些场景？

APP相关：
如何添加一个自定义字体到工程中
如何制作一个静态库/动态库，他们的区别是什么？
Configuration中，debug和release的区别是什么？
简单介绍下发送系统消息的机制（APNS）

UI：
系统如何寻找到需要响应用户操作的那个Responder
多屏幕尺寸的适配

UIButton的父类是什么？UILabel呢？
push view controller 和 present view controller的区别
描述下tableview cell的重用机制
UIView的frame和bounds的区别是什么

最后是几道场景题，也是我最喜欢问的：
发送10个网络请求，然后再接收到所有回应之后执行后续操作，如何实现？
实现一个第三方控件，可以在任何时候出现在APP界面最上层
实现一个最简单的点击拖拽功能。
上面那个拖拽之外，如果在手放开时，需要根据速度往前滑动呢？
如何减小一个应用程序的尺寸？
如何提高一个性用程序的性能？
不同版本的APP，数据库结构变化了，如何处理?

平心而论，这些题目并没有特别难，没有讲到黑科技，也没有讲到ACM算法题，都是iOS的基础概念以及很容易遇到的场景。可能也是因为我们招的目标，也只是一个可以完成业务开发的3年左右经验的人而已，所以大部分面试者水平并不如意，能答出以上大半题目，同时思路清晰态度积极向上的人，不到四分之一吧...

另外的感想就是，这个行业可能真的有点浮躁，很多面试者，连简单的几个场景题都答不出来，基础知识更是一般，只会用几个第三方库，就开口要25~30w的年薪，还有一种爱理不理的感觉。也有些人，在原来的公司，自称是技术负责人，但连APP的基本架构，包括哪些主要模块都讲不清楚，各种兜圈子，甚至有人讲了半天的产品功能和亮点，我不得不一次次打断才能继续面试。

其实我从11年开始自学iOS，做的事情越多，越觉得自己有越多的东西要学，离大牛的标准也是越来越远。而无论从深度还是广度来看，iOS开发都是一个值得挖掘的技术领域。由于苹果产品的火热，市场上的iOS开发一直供不应求，但真正有能力，高素质的可能真的不那么多。



